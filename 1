public void Init(int windowHeight, int windowWidth, int handle)
{
    string deviceIndex = Convert.ToString(this.index);
    deviceHandle = capCreateCaptureWindowA(ref deviceIndex, WS_VISIBLE | WS_CHILD, 0, 0, windowWidth, windowHeight, handle, 0);

    if (SendMessage(deviceHandle, WM_CAP_DRIVER_CONNECT, this.index, 0) > 0)
    {
        VIDEOINFOHEADER vHeader = new VIDEOINFOHEADER();
        vHeader.rcFrame = new RECT { Left = 0, Top = 0, Right = 1920, Bottom = 1080 };
        vHeader.dwWidth = 1920;
        vHeader.dwHeight = 1080;
        vHeader.dwBitRate = 5000000; // Prędkość bitów (5 Mbps)
        vHeader.dwBitCount = 24; // 24 bity na piksel (RGB)
        vHeader.dwSuggestedBufferSize = vHeader.dwWidth * vHeader.dwHeight * 3; // Zakładając RGB
        vHeader.dwQuality = 10000; // Wysoka jakość
        vHeader.dwFormatSize = Marshal.SizeOf(vHeader);

        IntPtr pVideoInfoHeader = Marshal.AllocHGlobal(Marshal.SizeOf(typeof(VIDEOINFOHEADER)));
        try
        {
            Marshal.StructureToPtr(vHeader, pVideoInfoHeader, false);
            SendMessage(deviceHandle, WM_CAP_SET_VIDEOFORMAT_NEW, vHeader.dwFormatSize, pVideoInfoHeader);
        }
        finally
        {
            Marshal.FreeHGlobal(pVideoInfoHeader);
        }

        // Kontynuuj z resztą inicjalizacji
        SendMessage(deviceHandle, WM_CAP_SET_PREVIEWRATE, 0x42, 0);
        SendMessage(deviceHandle, WM_CAP_SET_SCALE, 1, 0);
        SendMessage(deviceHandle, WM_CAP_SET_PREVIEW, -1, 0);
        SetWindowPos(deviceHandle, 1, 0, 0, windowWidth, windowHeight, 6);
    }
}
