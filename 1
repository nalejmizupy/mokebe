Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

$source = @"
using System;
using System.Runtime.InteropServices;

public class WebCam
{
    private const int WS_CHILD = 0x40000000;
    private const int WS_VISIBLE = 0x10000000;
    private const int WM_CAP_DRIVER_CONNECT = 0x40A;
    private const int WM_CAP_DRIVER_DISCONNECT = 0x40B;
    private const int WM_CAP_SET_PREVIEW = 0x432;
    private const int WM_CAP_SET_VIDEOFORMAT = 0x400;

    private int deviceHandle;

    [DllImport("avicap32.dll")]
    private static extern int capCreateCaptureWindowA(string lpszWindowName, int dwStyle, int x, int y, int nWidth, int nHeight, IntPtr hWndParent, int nID);

    [DllImport("user32.dll")]
    private static extern int SendMessage(int hwnd, int wMsg, int wParam, int lParam);

    [DllImport("user32.dll")]
    private static extern bool DestroyWindow(int hwnd);

    public void Init(int deviceIndex, IntPtr hwndParent)
    {
        deviceHandle = capCreateCaptureWindowA("WebCam", WS_VISIBLE | WS_CHILD, 0, 0, 1920, 1080, hwndParent, 0);

        if (SendMessage(deviceHandle, WM_CAP_DRIVER_CONNECT, deviceIndex, 0) > 0)
        {
            // Set video format
            VideoFormat format = new VideoFormat();
            format.size = Marshal.SizeOf(typeof(VideoFormat));
            format.width = 1920;
            format.height = 1080;
            format.fps = 30;

            // Send message to set video format
            SendMessage(deviceHandle, WM_CAP_SET_VIDEOFORMAT, 0, Marshal.SizeOf(format));

            // Start preview
            SendMessage(deviceHandle, WM_CAP_SET_PREVIEW, 1, 0);
        }
    }

    public void Stop()
    {
        SendMessage(deviceHandle, WM_CAP_DRIVER_DISCONNECT, 0, 0);
        DestroyWindow(deviceHandle);
    }

    [StructLayout(LayoutKind.Sequential)]
    private struct VideoFormat
    {
        public int size;
        public int width;
        public int height;
        public int fps; // FPS field
        // Add any additional fields required for the format
    }
}
"@

Add-Type -TypeDefinition $source -Language CSharp

function Show-WebCam {
    $form = New-Object System.Windows.Forms.Form
    $form.Text = "WebCam"
    $form.Width = 1920
    $form.Height = 1080

    $webCam = New-Object WebCam
    $webCam.Init(0, $form.Handle)

    $form.Add_FormClosing({
        $webCam.Stop()
    })

    $form.ShowDialog()
}

# Run the function to show the webcam
Show-WebCam
